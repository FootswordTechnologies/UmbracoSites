<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="1" version="1.0.1" url="" name="Cultiv Razor Contact Form" folder="b7d2e0c9-ecdd-4e6f-af74-f21e945c427e" packagepath="" repositoryGuid="65194810-1f85-11dd-bd0b-0800200c9a66" packageGuid="dc60d482-23de-48b9-b28b-f011cb679d58" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">MIT license</license>
    <author url="http://cultiv.nl">Sebastiaan Janssen</author>
    <readme><![CDATA[A simple contact form, written in Razor. The Razor file is structured so that you can easily modify the existing fields or add new ones.

Basic usage:

To put the contact form on your template, add this Umbraco macro:
<umbraco:Macro FileLocation="~/macroScripts/CultivContactForm.cshtml"            MailFrom="hi@test.com" runat="server" />

This is the simplest way to start and add the form to your site. It will give you a full contact form with validation. The MailFrom parameter is required, this is the e-mail address that will appear in the “from” field of the e-mails that are being sent out.
Additionally, you may add a parameter called MailFromName to specify the name that will be shown in the “from” field.

There are many configurable elements for this package, for full documentation go to the Cultiv Razor Contact Form package page on our.umbraco.org and click on the "documentation" tab.
The URL: http://our.umbraco.org/projects/website-utilities/cultiv-razor-contact-form]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/macroScripts/CultivContactForm.cshtml</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
  <package id="2" version="2.5.7" url="" name="ImageGen" folder="394c561e-a5ba-4b78-ab3e-40d64590415f" packagepath="" repositoryGuid="65194810-1f85-11dd-bd0b-0800200c9a66" packageGuid="cbc37b15-4a53-4c3f-b8a0-e49543d84192" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://www.opensource.org/licenses/mit-license.php">Proprietary License</license>
    <author url="http://www.percipientstudios.com">Douglas Robar</author>
    <readme><![CDATA[ImageGen 2.5.7

Create high-quality, perfectly sized images for photo galleries, product images, staff profiles, and more. Add watermarks and overlays, rotate, resize, crop, convert image formats, and more with thirty powerful features. Create graphical text from all TrueType fonts with complete control over size, style, color, lineheight, and more for headlines and menus. High performance server and client caching. 

Don’t waste your valuable time manually creating, resizing, or editing each image in Photoshop. ImageGen is an easy-to-use application for your Umbraco or ASP.NET 2.0+ website that automatically resizes photos, screenshots, and images from icon to thumbnail to full-screen sizes.

ImageGen can create text graphics as well as overlay text on images, which is particularly useful for making image-based navigation with styled dynamic text on top. And ImageGen can automatically protect and brand your images with watermarks and corporate logos.

With more than 30 options, ImageGen can create hundreds of thousands of variations to meet virtually any need. ImageGen is easy to install and use on your website. ImageGen creates extremely high-quality images quickly. And ImageGen’s advanced caching means images are served immediately for fast and responsive websites.

Extensive documentation.]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/imagegen.dll</file>
      <file>/config/ImageGen.config</file>
      <file>//ImageGen.ashx</file>
      <file>/usercontrols/ImageGenInstaller.ascx</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
</packages>