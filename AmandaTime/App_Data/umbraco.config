<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE root[ 
<!ELEMENT uBlogsy-BaseContainer ANY>
<!ATTLIST uBlogsy-BaseContainer id ID #REQUIRED>
<!ELEMENT uBlogsyBaseDocType ANY>
<!ATTLIST uBlogsyBaseDocType id ID #REQUIRED>
<!ELEMENT uBlogsyBasePage ANY>
<!ATTLIST uBlogsyBasePage id ID #REQUIRED>
<!ELEMENT uBlogsyComment ANY>
<!ATTLIST uBlogsyComment id ID #REQUIRED>
<!ELEMENT uBlogsyContainerBlog ANY>
<!ATTLIST uBlogsyContainerBlog id ID #REQUIRED>
<!ELEMENT uBlogsyContainerComment ANY>
<!ATTLIST uBlogsyContainerComment id ID #REQUIRED>
<!ELEMENT uBlogsyContainerPage ANY>
<!ATTLIST uBlogsyContainerPage id ID #REQUIRED>
<!ELEMENT uBlogsyFolderDay ANY>
<!ATTLIST uBlogsyFolderDay id ID #REQUIRED>
<!ELEMENT uBlogsyFolderMonth ANY>
<!ATTLIST uBlogsyFolderMonth id ID #REQUIRED>
<!ELEMENT uBlogsyFolderYear ANY>
<!ATTLIST uBlogsyFolderYear id ID #REQUIRED>
<!ELEMENT uBlogsyLanding ANY>
<!ATTLIST uBlogsyLanding id ID #REQUIRED>
<!ELEMENT uBlogsyPage ANY>
<!ATTLIST uBlogsyPage id ID #REQUIRED>
<!ELEMENT uBlogsyPost ANY>
<!ATTLIST uBlogsyPost id ID #REQUIRED>
<!ELEMENT uBlogsyRSS ANY>
<!ATTLIST uBlogsyRSS id ID #REQUIRED>

]>
<root id="-1">
  <uBlogsyLanding id="1067" parentID="-1" level="1" writerID="0" creatorID="0" nodeType="1062" template="1048" sortOrder="2" createDate="2011-05-15T12:21:13" updateDate="2012-02-10T08:50:53" nodeName="AmandaTime" urlName="amandatime" writerName="admin" creatorName="admin" path="-1,1067" isDoc="">
    <uBlogsyContainerBlog id="1068" parentID="1067" level="2" writerID="0" creatorID="0" nodeType="1056" template="1047" sortOrder="1" createDate="2011-05-31T13:36:29" updateDate="2012-02-09T11:15:31" nodeName="Posts" urlName="posts" writerName="admin" creatorName="admin" path="-1,1067,1068" isDoc="">
      <uBlogsyContentTitle>Posts</uBlogsyContentTitle>
      <uBlogsySeoKeywords />
      <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
      <uBlogsyContentSummary><![CDATA[Summary]]></uBlogsyContentSummary>
      <uBlogsyContentBody><![CDATA[
<p>This body and title is here in case you want to use this as a
landing page.</p>
]]></uBlogsyContentBody>
      <umbracoNaviHide>0</umbracoNaviHide>
      <umbracoRedirect />
      <umbracoInternalRedirectId />
      <umbracoUrlName />
      <umbracoUrlAlias />
      <uBlogsyFolderYear id="1147" parentID="1068" level="3" writerID="0" creatorID="0" nodeType="1061" template="1047" sortOrder="0" createDate="2012-02-09T11:55:25" updateDate="2012-02-09T11:55:44" nodeName="2012" urlName="2012" writerName="admin" creatorName="admin" path="-1,1067,1068,1147" isDoc="">
        <uBlogsyFolderMonth id="1148" parentID="1147" level="4" writerID="0" creatorID="0" nodeType="1060" template="1047" sortOrder="1" createDate="2012-02-09T11:56:05" updateDate="2012-02-09T11:57:32" nodeName="02" urlName="02" writerName="admin" creatorName="admin" path="-1,1067,1068,1147,1148" isDoc="">
          <uBlogsyContentTitle />
          <uBlogsySeoKeywords />
          <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
          <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
          <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
          <umbracoNaviHide>0</umbracoNaviHide>
          <umbracoRedirect />
          <umbracoInternalRedirectId />
          <umbracoUrlName />
          <umbracoUrlAlias />
          <uBlogsyPost id="1153" parentID="1148" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="1" createDate="2012-02-09T19:39:41" updateDate="2012-02-09T19:40:11" nodeName="Test" urlName="test" writerName="admin" creatorName="admin" path="-1,1067,1068,1147,1148,1153" isDoc="">
            <uBlogsyPostAuthor />
            <uBlogsyPostDate>2012-02-09T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Test</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Test summary]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
        </uBlogsyFolderMonth>
        <uBlogsyContentTitle />
        <uBlogsySeoKeywords />
        <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
        <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
        <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
        <umbracoNaviHide>0</umbracoNaviHide>
        <umbracoRedirect />
        <umbracoInternalRedirectId />
        <umbracoUrlName />
        <umbracoUrlAlias />
      </uBlogsyFolderYear>
      <uBlogsyFolderYear id="1072" parentID="1068" level="3" writerID="0" creatorID="0" nodeType="1061" template="1047" sortOrder="1" createDate="2011-08-06T19:11:16" updateDate="2012-02-09T11:15:32" nodeName="2011" urlName="2011" writerName="admin" creatorName="admin" path="-1,1067,1068,1072" isDoc="">
        <uBlogsyContentTitle />
        <uBlogsySeoKeywords />
        <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
        <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
        <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
        <umbracoNaviHide>0</umbracoNaviHide>
        <umbracoRedirect />
        <umbracoInternalRedirectId />
        <umbracoUrlName />
        <umbracoUrlAlias />
      </uBlogsyFolderYear>
      <uBlogsyFolderYear id="1069" parentID="1068" level="3" writerID="0" creatorID="0" nodeType="1061" template="1047" sortOrder="2" createDate="2011-10-23T15:15:17" updateDate="2012-02-09T11:15:32" nodeName="2010" urlName="2010" writerName="admin" creatorName="admin" path="-1,1067,1068,1069" isDoc="">
        <uBlogsyFolderMonth id="1130" parentID="1069" level="4" writerID="0" creatorID="0" nodeType="1060" template="1047" sortOrder="2" createDate="2012-02-09T11:51:09" updateDate="2012-02-09T18:14:04" nodeName="May" urlName="may" writerName="admin" creatorName="admin" path="-1,1067,1068,1069,1130" isDoc="">
          <uBlogsyContentTitle />
          <uBlogsySeoKeywords />
          <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
          <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
          <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
          <umbracoNaviHide />
          <umbracoRedirect />
          <umbracoInternalRedirectId />
          <umbracoUrlName />
          <umbracoUrlAlias />
          <uBlogsyPost id="1131" parentID="1130" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="1" createDate="2012-02-09T11:51:09" updateDate="2012-02-10T17:46:36" nodeName="Investigation of Rounded Edges" urlName="investigation-of-rounded-edges" writerName="admin" creatorName="admin" path="-1,1067,1068,1069,1130,1131" isDoc="">
            <uBlogsyPostAuthor />
            <uBlogsyPostDate>2010-05-30T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[corner-radius,css,w3c]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Investigation of Rounded Edges</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[For now, I'll lead into things gently by considering rounded edges:]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p>Wow, it's ages since I posted anything! I have been
concentrating on stuff like looking for jobs and on my MCTS 70-536
exam. I passed the exam in March but studying for it certainly
didn't throw up anything all that fascinating. The last month I've
been working. Thing about real tasks, as opposed to set exercises,
is that they are more interesting and throw up problems you didn't
expect. When I have the energy, I'll blog on the delights of using
detached database files on two different computers.</p>

<p>&nbsp;</p>

<div class="rounded">
<p>For now, I'll lead into things gently by considering rounded
edges:</p>

<p>The old-school approach to having a nice rounded edge is, you
make a background image with a rounded edge and put your text over
that. This can look perfect in a magazine but is really inflexible.
For the web, you need to be able to present your text, in its
pretty rounded box in various sizes of browser window, from the
enormous landscape-sized screens we all seem to have these days
right down to mobile devices. And since, as an owner of a wide
screen myself, I do not like to give it all over to my browser, I
pull it and push it out of shape constantly.</p>
</div>

<p>&nbsp;</p>

<div class="rounded">
<p>There are two, possibly three ways of making rounded edges on
html block-level elements. The older version is to produce a great
many small images, one for each round corner, one for each side.
You then assign each as a background image for something. This
requires finding and also inventing plenty of html elements to
attach them to, since each can only accommodate the one background
image. This produces plenty of non-semantic rubbish to fill up your
code and demands that the browser downloads lots of images. This
approach, its hurts me to say it, probably works best if you use
tables. The various table cells fit together so well, you see!</p>
</div>

<p>&nbsp;</p>

<div class="rounded">
<p>Another approach is to download only one image, complete with
its rounded edges and to divide it up on-the-fly, using Javascript.
It still has to be divided amongst lots of otherwise-unnecessary
divs and spans or table cells but it means loading fewer images.
These days it is certainly easier to use the JQuery approach to
JavaScript.</p>
</div>

<p>&nbsp;</p>

<div class="rounded">
<p>For my&nbsp;<a href="#">portfolio</a>, which I revamped over the
weekend, I thought I would revisit CSS3. Why not let the browser do
this? My needs are simple. I just want rounded corners, sometimes
with a rounded border. I do not want the moon, or even drop
shadows.</p>
</div>

<p>&nbsp;</p>

<div class="rounded">
<p>I ended up making a separate css file for Mozilla and Webkit
since, despite changing fashion, they still insist on their own
strange corner attributes. For a box with four rounded corners:</p>

<p>&nbsp;</p>

<pre>
-moz-border-radius: 5px;
</pre>

<p>&nbsp;</p>

<pre>
-webkit-border-radius: 5px;
</pre>

<p>&nbsp;</p>

<p>Opera and Chrome are both happy with</p>

<p>&nbsp;</p>

<pre>
border-radius: 5px;
</pre>

<p>&nbsp;</p>

<p>since this was first suggested by W3C oooh, nine years ago? As
for Internet Explorer, even the brave new IE8, forget it. Look
up&nbsp; <a
href="http://msdn.microsoft.com/en-us/library/bb250413%28VS.85%29.aspx">
Rounded Corners in Internet Explorer</a>&nbsp;and you will see it
is not supported in any current Microsoft browser. They say "We
would like to point out the abundance of alternate solutions
available on the Web." Yup, I'll try some of those out sometime.
I'd like to have rounded corners for&nbsp;all&nbsp;customers. I
will merely need to remind them that providing a solution for IE
could mean hours or work per page. We are promised a solution in
IE9. That would be nice. I hope people install it.</p>
</div>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
        </uBlogsyFolderMonth>
        <uBlogsyContentTitle>2010</uBlogsyContentTitle>
        <uBlogsySeoKeywords />
        <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
        <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
        <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
        <umbracoNaviHide>0</umbracoNaviHide>
        <umbracoRedirect />
        <umbracoInternalRedirectId />
        <umbracoUrlName />
        <umbracoUrlAlias />
      </uBlogsyFolderYear>
      <uBlogsyFolderYear id="1112" parentID="1068" level="3" writerID="0" creatorID="0" nodeType="1061" template="1047" sortOrder="3" createDate="2012-02-09T11:51:04" updateDate="2012-02-09T12:07:21" nodeName="2009" urlName="2009" writerName="admin" creatorName="admin" path="-1,1067,1068,1112" isDoc="">
        <uBlogsyFolderMonth id="1113" parentID="1112" level="4" writerID="0" creatorID="0" nodeType="1060" template="1047" sortOrder="1" createDate="2012-02-09T11:51:04" updateDate="2012-02-09T12:07:21" nodeName="August" urlName="august" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1113" isDoc="">
          <uBlogsyContentTitle />
          <uBlogsySeoKeywords />
          <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
          <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
          <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
          <umbracoNaviHide />
          <umbracoRedirect />
          <umbracoInternalRedirectId />
          <umbracoUrlName />
          <umbracoUrlAlias />
          <uBlogsyPost id="1114" parentID="1113" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="1" createDate="2012-02-09T11:51:04" updateDate="2012-02-10T17:59:19" nodeName="Let's Get Going!" urlName="lets-get-going!" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1113,1114" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-08-06T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical,Garden]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[ajax,asp.net,web development]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Let's Get Going!</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Well, I've been keeping a diary of my rather technical doings for some time now, do it would be useful to summarize now and again. To give some relief from webstuff boredom, I think I'll add a picture of something beautiful every day. This will get me out and taking pictures even if only in the garden! Otherwise I'd spend all my time in Starbucks.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<div>
<p><img src="/media/3558/2damsons_300x225.jpg"  width="300"  height="225" alt="2Damsons"/><br />
 Well, I've been keeping a diary of my rather technical doings for
some time now, do it would be useful to summarize now and again. To
give some relief from webstuff boredom, I think I'll add a picture
of something beautiful every day. This will get me out and taking
pictures even if only in the garden! Otherwise I'd spend all my
time in Starbucks.</p>

<p>&nbsp;</p>

<p>Yesterday and today I have been grappling with the open
source-ish AJAX Control Toolkit, specifically with the Calendar
extender. Very nice little widget that pops up under a textbox so
you can choose a date. Trouble is, it has preset css. So if, for
example, you have set your font size a bit big, the calendar won't
fit into its predefined space. In my case I lost Friday and
Saturday. To make any changes to the CSS, I could find no other
solution than to replace most of it (it ignores little bits). I
copied suggestions from a site called&nbsp; <a
href="http://programming.top54u.com/post/Customized-AJAX-Calendar-Control-CSS-Example.aspx">
Top54</a>. Written last month, so up-to-date. I now have a large
mass of extra class definitions in my CSS. Haven't they heard of
the cascade? I also have a largeish date chooser with colours from
my website and a rather wonky pair of substitute next/prev
arrows.</p>

<p>&nbsp;</p>

<p>Wierd how much time such seemingly little problems can eat up,
eh?</p>

<p>&nbsp;</p>
</div>

<div>
<p>The image today is two of our first crop of damsons. We've had
the tree 3-4 years now and finally we see them. Gorgeous colour and
bloom! With any luck at least one pot of dark crimson jam to
come.</p>
</div>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1115" parentID="1113" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="2" createDate="2012-02-09T11:51:04" updateDate="2012-02-10T17:58:20" nodeName="MS SQL is too expensive" urlName="ms-sql-is-too-expensive" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1113,1115" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-08-27T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical,Garden]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[c#,mssql,sql,web development]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>MS SQL is too expensive</uBlogsyContentTitle>
            <uBlogsySeoKeywords>MS SQL</uBlogsySeoKeywords>
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Spent much of yesterday researching how to become a "reseller" of hosting space. In other words, if I am going to write websites for people, I want somewhere to host their websites so I can keep an eye on them. I like ASP.Net and C#, which implies a Microsoft server and Ms SQL. There are lots of these around, some are very cheap. But ALL of the cheap ones have lots of truly scary reviews. Problem is, it looks like you have to pay a certain amount to Microsoft per MS database and there is no getting around that.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p><span style="font-family: verdana;">Hi,</span></p>

<p>&nbsp;</p>

<p><span style="font-family: verdana;">Today's picture was taken by
my daughter at the RHS Rosemoor in Devon last&nbsp;week. I love
those big scary ferny things. They have large brush like flowers
under all the leaves as well.<img src="/media/3733/ScaryPlant_300x400.jpg"  width="300"  height="400" alt="Scary Plant"/><br />
<br />
</span> <span style="font-family: verdana;">Spent much of yesterday
researching how to become a "reseller" of hosting space. In other
words, if I am going to write websites for people, I want somewhere
to host their websites so I can keep an eye on them. I like ASP.Net
and C#, which implies a Microsoft server and Ms SQL. There are lots
of these around, some are very cheap. But ALL of the cheap ones
have lots of truly scary reviews. Problem is, it looks like you
have to pay a certain amount to Microsoft per MS database and there
is no getting around that.</span></p>

<p>&nbsp;</p>

<p><span style="font-family: verdana;">So why do I want it? MySQL
is free and as far as I can see does the same job (is relational
and all that). I can't use DotNetNuke but then I haven't yet
managed to get that to run on my PC anyway. Looks like I can get a
deal with a reputable host (for example 1&amp;amp;1 but it could be
someone else) and use ASP.Net and MySQL (it runs on a Windows PC,
it can run on a Windows server, surely?).</span></p>

<p>&nbsp;</p>

<p><span style="font-family: verdana;">Ok, next step is how to
connect to MySQL, the easiest way possible via Visual Studio 2008.
I recommend this&nbsp;</span> <a
href="http://www.packtpub.com/article/displaying-mysql-data-on-asp.net-web-page">
tutorial</a><span style="font-family: verdana;">&nbsp;by Dr. Jay
Krishnaswamy. This looks really lovely until you get to the part
where you change the database type. MySQL just does not appear. The
magic (and it took me ages to find this out) is on the MySQL
website itself. Look through the&nbsp;</span> <a
href="http://dev.mysql.com/downloads/">downloads</a><span
style="font-family: verdana;">&nbsp;page (there aren't very many)
and choose the latest stable connector for MySQL and .Net. This is
an msi file. Scary though it is, I just downloaded it and let it do
its stuff.</span></p>

<p>&nbsp;</p>

<p><span style="font-family: verdana;">Next time I opened up
VisStudio and had another go at configuring the data source, MySQL
appeared in the list! After that it is all a matter of making sure
your WAMP server is on and choosing the database and table you
want. You also have to follow the above tutorial, to avoid errors
(i.e, VisStudio does not like square brackets in SQL
queries).</span></p>

<p>&nbsp;</p>

<p><span style="font-family: verdana;">I now have a page which
shows a gridview of a MySQL table on localhost. Next stop the
external server!</span></p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
        </uBlogsyFolderMonth>
        <uBlogsyFolderMonth id="1116" parentID="1112" level="4" writerID="0" creatorID="0" nodeType="1060" template="1047" sortOrder="2" createDate="2012-02-09T11:51:05" updateDate="2012-02-09T12:07:22" nodeName="September" urlName="september" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116" isDoc="">
          <uBlogsyContentTitle />
          <uBlogsySeoKeywords />
          <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
          <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
          <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
          <umbracoNaviHide />
          <umbracoRedirect />
          <umbracoInternalRedirectId />
          <umbracoUrlName />
          <umbracoUrlAlias />
          <uBlogsyPost id="1117" parentID="1116" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="1" createDate="2012-02-09T11:51:05" updateDate="2012-02-10T17:57:38" nodeName="Recent Trip to Berlin" urlName="recent-trip-to-berlin" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116,1117" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-09-02T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Art,Food]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[Berlin,travel]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Recent Trip to Berlin</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Thought I'd better scribble down something about last weekend's trip to Berlin, since I found myself buried in a thriller I bought in Hugendubel, Berlin's answer to Waterstones. Staff there very friendly. I homed in on one and asked her to recommend German Science Fiction writers. Nothing really appealed, so I ended up on the "Krimi" pile, picking out "Tannöd" by Andrea Maria Schenkel. Great stuff, several narrators but all pretty straightforward people, or I'd be lost. Lovely to read Bavarian voices, which sound so much like Austrian ones and remind me of the year I spent in Kärnten in my twenties.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p><img src="/media/3578/Berlin10_EisCafe.JPG" width="320" height="270" alt="Berlin 10_Eis Cafe"/></p>

<div>
<p>Thought I'd better scribble down something about last weekend's
trip to Berlin, since I found myself buried in a thriller I bought
in Hugendubel, Berlin's answer to Waterstones. Staff there very
friendly. I homed in on one and asked her to recommend German
Science Fiction writers. Nothing really appealed, so I ended up on
the "Krimi" pile, picking out "Tannöd" by Andrea Maria Schenkel.
Great stuff, several narrators but all pretty straightforward
people, or I'd be lost. Lovely to read Bavarian voices, which sound
so much like Austrian ones and remind me of the year I spent in
Kärnten in my twenties.</p>
</div>

<div>
<p>I've included a picture of surely the best ice cream (sorbet,
actually) in Berlin.&nbsp;<a
href="http://www.berliner-eismanufaktur.de/">Eismaufaktur</a>. For
my talent at reading detective stories and other intellectually
undemanding books to flower most fully, it has to be in a good
cafe. How could it be otherwise?</p>
</div>

<div>
<p>The second picture is from a gallery I like very much near the
spanking new Hauptbahnhof. Confusingly, the gallery is
called&nbsp;<a
href="http://www.hamburgerbahnhof.de/">Hamburgerbahnhof</a>&nbsp;but
has been converted, like the Gare d'Orsay in Paris. You can't
really resist Anselm Kiefer's plane made of soft lead, can you? No
doubt it means something serious but I think it is cute. I found
myself in the position of having to explain Joseph Beuys obsessions
with fat and felt to my friend Lesley, when I have limited sympathy
with him myself. She seemed to like him, which is something.<img src="/media/3583/Berlin16_HamburgerBahnhof.JPG" width="350" height="234" alt="Berlin 16_Hamburger Bahnhof"/></p>
</div>

<div>
<p>I felt totally at home in Berlin (don't say it's because I have
spent most of my adult life in flat landscapes!) and it is soooo
tempting to try and find a job there.</p>
</div>

<div>
<p>I also discovered I love white Rioja, though I only had one
glass. Gorgeous.</p>
</div>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1118" parentID="1116" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="2" createDate="2012-02-09T11:51:05" updateDate="2012-02-10T17:57:14" nodeName="Fun with IE7" urlName="fun-with-ie7" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116,1118" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-09-04T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[asp.net,css,forms,ie7,web development]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Fun with IE7</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Okay, this will be a super-boring post for those uninterested in making stuff work on IE7 (that's all of us, then).]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p class="separator"><img src="/media/3653/Firefox_250x57.jpg"  width="250"  height="57" alt="Firefox"/></p>

<div>
<p>Okay, this will be a super-boring post for those uninterested in
making stuff work on IE7 (that's all of us, then).</p>
</div>

<div>
<p>On the left is a rather dull little form for entering an
address. It is a cutdown version of an Asp.Net detailsView, which
is why it is in table format (don't shoot me!). I set the size of
the input field to 90% of available space, otherwise I get a short
field. The whole table sits in a half-width column (may or may not
be significant).</p>
</div>

<p class="separator"><img src="/media/3678/IE7_250x71.jpg"  width="250"  height="71" alt="IE7"/></p>

<div>
<p>This is IE7's take on the same code (Opera and Chrome both
looked like Firefox). As you can see, the font is too big, there
are no borders and the input fields are shoved way over to the
right. Aaargh! I'm trying to create a Content Management System and
yes, most folks use IE7.</p>
</div>

<div>
<p>Inside my &amp;lt;!--[if IE]&amp;gt; brackets I had to make
several changes.</p>
</div>

<ul>
<li>font-size:small;</li>

<li>.detailView td, .detailView th, .detailView{<br />
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
border:1px solid black;<br />
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</li>

<li>input{<br />
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
width:20em;<br />
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</li>

<li>.commandRow input{<br />
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
width:80px;<br />
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</li>
</ul>

<div>
<p>The font-size, well, whatever works. The border had to be set
manually because, at detailView is an asp widget, I get little
choice over the border (which is set to "1" in any case). I set the
input to 20em, which is crap, because it doesn't fill the space. If
I make it any bigger, it crowds out the label. And of course, I had
to reset the size of the command buttons, or they'd be 20 ems as
well.</p>
</div>

<p class="separator"><img src="/media/3683/IE7Improved_250x71.jpg"  width="250"  height="71" alt="IE7Improved"/></p>

<div>
<p>This is the result. It's ok but not gorgeous. And it is only for
adding things to a database.</p>
</div>

<div>
<p>Annoying, eh?</p>
</div>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1119" parentID="1116" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="3" createDate="2012-02-09T11:51:06" updateDate="2012-02-10T17:56:25" nodeName="Damson Time!" urlName="damson-time!" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116,1119" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-09-10T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Garden,Food]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[Jam,damson]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Damson Time!</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Anyway, over the last two weekends, my indefatigable husband has produced several jars of damson jam (front, one went to helpful neighbour), one large jar of damsons in rum(back) and reasonable amount of chinese plum sauce(right), which should work just great as a marinade for pork and other things. The rum fruit is for Christmas, if I can wait that long.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p><img src="/media/3618/Damsons_5_250x333.jpg"  width="250"  height="333" alt="Damsons _5"/>You may remember a few
posts back I put up a picture of some beautiful damsons growing in
our tree. This is called a Shropshire Prune, and I bought it
from&nbsp;<a href="http://www.keepers-nursery.co.uk/">Keepers
Nursery</a>&nbsp;in Kent three years ago.</p>

<p>At that time, I had to go away for the weekend to take the
children to a competition and David had to plant the tree in a
really pretty large square (not round!) hole. Since he was
suffering from vertigo, he had to get a neighbour to make sure he
didn't put it in at 45 degrees!</p>

<p>This year it is tall and fairly bushy. Thanks to great weather
and huge amounts of water, it has produced a crop for the first
time. I'd say about 8 kilos. To my surprise, the small,
silver-bloomed dark fruit are very good to eat raw but that is not
why I wanted them. When I do get round to eating jam, my favourite
is certainly dark purple damson. I have a soft spot for sour cherry
as well, perhaps I should find room for a cherry tree?</p>

<p>Anyway, over the last two weekends, my indefatigable husband has
produced several jars of damson jam (front, one went to helpful
neighbour), one large jar of damsons in rum(back) and reasonable
amount of chinese plum sauce(right), which should work just great
as a marinade for pork and other things. The rum fruit is for
Christmas, if I can wait that long.</p>

<p>Recipes should follow, when I can prise them out of David. I
know he made the rum one up. I am also waiting for my daughter to
turn the remaining damsons in the freezer into dark red crumble. Me
cook? Actually, I make curries and fab wholemeal bread. More
another time ...</p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1120" parentID="1116" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="4" createDate="2012-02-09T11:51:06" updateDate="2012-02-10T17:55:53" nodeName="Haddenham Steam Rally" urlName="haddenham-steam-rally" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116,1120" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-09-13T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Art]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[music]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Haddenham Steam Rally</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Well, this is going to be quite a hard blog to write. The main reason being that the whole point of going this year was to see Dunx and his embryo band playing in the (rather tiny) FenJam tent. And play they did. Ro took a video and now all I want is to upload it. Sigh ...]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p><img src="/media/3758/TractorWheel.jpg" width="200" height="150" alt="Tractor Wheel"/>Well, this is going to be
quite a hard blog to write. The main reason being that the whole
point of going this year was to see Dunx and his embryo band
playing in the (rather tiny) FenJam tent. And play they did. Ro
took a video and now all I want is to upload it. Sigh ...</p>

<p><img src="/media/3743/ShireHorse.jpg" width="200" height="215" alt="Shire Horse"/></p>

<p>In the meantime, there are some great pix of prettily painted
tractor wheels, handsome shire horses, steam engines (duh!) and so
on.</p>

<p>&nbsp;</p>

<p>Strange how exhausting it is being at Haddenham way above sea
level. Haddenham is part of the Isle of Ely, so it is ooh about
300ft above the sea? Anyway, the wind whistles about and the
announcer NEVER shuts up, so it's pretty hard on the head.</p>

<p>Here is the video, straight from YouTube. Dunx wrote the song,
and it's called "Invincible". A classic break-up number, I'd
say!</p>

<p>&nbsp;I NEED TO FIND OUT HOW TO RENDER VIDEO HERE
http://www.youtube.com/watch?v=U9jizPZax7U is the link</p>

<p>In fact what I am really supposed to be doing is reading Willa
Cather's&nbsp;My Ántonia&nbsp;for a reading group tomorrow. A
gorgeous book so far. I think I'd like to go to Nebraska now and
lose myself in the tall wine-red grasses.</p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1121" parentID="1116" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="5" createDate="2012-02-09T11:51:06" updateDate="2012-02-10T17:44:31" nodeName="Chars, words and sorted lists" urlName="chars,-words-and-sorted-lists" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116,1121" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-09-23T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[asp.net,c#,garden,science fiction]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Chars, words and sorted lists</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[I've recently been working on a little task which is to run on the console. Not a website at all, much simpler. I found myself starting up my Visual Studio and setting up a project for the first time. Even, rather later, gathering my nice new classes into one place and making them into a library. Hot stuff! I should certainly create libraries more often.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p class="separator"><img src="/media/3738/Sedum.jpg" width="350" height="262" alt="Sedum"/></p>

<p>Pictures today are autumn things in the garden. First is some
pink Sedum, looking much like pink cauliflower (you can get pink
varieties). The second is bright orange Pyracanthus berries before
the blackbirds scoff them all.</p>

<p>&nbsp;</p>

<p>I've recently been working on a little task which is to run on
the console. Not a website at all, much simpler. I found myself
starting up my Visual Studio and setting up a project for the first
time. Even, rather later, gathering my nice new classes into one
place and making them into a library. Hot stuff! I should certainly
create libraries more often.</p>

<p>&nbsp;</p>

<p>The task was to create an instance of a character reader and
assign it a chunk of text as a string. This can then be accessed,
one char at a time. In a friendly way it lets you know you have got
to the end by throwing an EndOfStreamException. The output wanted
was a&nbsp; list of words in the string sorted by number of
occurrences and then alphabetically. After that it got more
complicated but that will do for the next time.</p>

<p>&nbsp;</p>

<p>I got my text from the first 3 paras of a classic short
story&nbsp;<a
href="http://lucis.net/stuff/clarke/star_clarke.html">"The
Star"</a>&nbsp;by Arthur C Clarke. Thank you&nbsp;<a
href="http://en.wikipedia.org/wiki/The_Star_%28short_story%29">Wikipedia.</a></p>

<p>&nbsp;</p>

<p>I decided to create a class wrapper for a list of words called
WordList. Also a WordListBuilder to process each character as it
came and wrap things up at the end. This character reader class is
called RealTimeCharReader, there will be another type later.</p>

<p>So:</p>

<p>&nbsp;</p>

<pre>
<span
style="color: #00ffff;">ICharReader</span> myCharReader = <span
style="color: #0000ff;">new</span> <span
style="color: #00ffff;">RealTimeCharReader</span>();
    assignReaderContent(myCharReader);
    <span
style="color: #00ffff;">WordListBuilder</span> myWordListBuilder = <span
 style="color: #0000ff;">new</span> <span
style="color: #00ffff;">WordListBuilder</span>(myCharReader,&nbsp;
</pre>

<pre>
<span style="color: #00ffff;"><span
style="color: #0000ff;">new</span> WordList</span>());
</pre>

<p>&nbsp;</p>

<p>This means I want an instance of&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">ICharReader</span>,
which implements&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">IDispose</span>,
so has to have a&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Dispose()&nbsp;</span>
method, to make sure it cleans up. It also has to have a
method&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">fetchNextChar()</span>&nbsp;which
delivers a character, moves the pointer along and throws an
exception when it is finished.</p>

<p>&nbsp;</p>

<p><span
style="font-family: 'Courier New', Courier, monospace;">assignReaderContent&nbsp;</span>
is a static function allowing me to pass in whatever string I feel
like in the Main() function.</p>

<p class="separator"><img src="/media/3718/pyracanthus.jpg" width="350" height="354" alt="Pyracanthus"/></p>

<p><span
style="font-family: 'Courier New', Courier, monospace;">WordListBuilder&nbsp;</span>
is going to have to take each char and either add it to a new word,
or finish the word, eat any nonletter characters and start a new
word. Each word is then added to the WordList. A&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Word&nbsp;</span>
is another new class containing a string and a counter. If a word
turns up more than once, you can just increment the counter. Both
the char reader and the wordlist are passed to the WordListBuilder
to do the real work. Here is the call:</p>

<pre>
myWordListBuilder.buildWordList();
myWordListBuilder.BuilderWordList.makeReport();
</pre>

<p><span
style="font-family: 'Courier New', Courier, monospace;">buildWordList&nbsp;</span>
will process the list,&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">makeReport&nbsp;</span>
will sort it and print the results to the console.</p>

<p>&nbsp;</p>

<p><span
style="font-family: 'Courier New', Courier, monospace;">buildWordList&nbsp;</span>
consists of a&nbsp;<span
style="font-family: inherit;">try/catch&nbsp;</span> structure
containing a<span
style="font-family: Verdana, sans-serif;">&nbsp;forever
while&nbsp;</span> loop which takes each returned char and decides
what to do with it. The catch intercepts the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">EndOfStreamException&nbsp;</span>
and exits the while loop. Any other runtime exception in the reader
gets caught by a more general catch. Either way the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">finally</span>&nbsp;clause
means&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Dispose&nbsp;</span>
is always invoked.</p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;"><span style="color: #000000;"><span
style="color: #0000ff;">public void</span> buildWordList()</span> <span
 style="color: #000000;">{</span> <span
style="color: #000000;"><span
style="color: #0000ff;">char</span> nextChar;</span> <span
style="color: #000000;"><span
style="color: #0000ff;">string</span> nextWord = string.Empty;</span> <span
 style="color: #000000;"><span
style="color: #0000ff;">try</span>{</span> <span
style="color: #000000;"><span
style="color: #0000ff;">while</span> (<span
style="color: #0000ff;">true</span>){</span> <span
style="color: #000000;">nextChar = BuilderReader.fetchNextChar();</span> <span
 style="color: #000000;"><span
style="color: #0000ff;">if</span>(char.IsLetter(nextChar)){</span> <span
 style="color: #000000;">nextWord += nextChar;</span> <span
style="color: #000000;">}</span> <span
style="color: #000000;"><span
style="color: #0000ff;">else</span>{</span> <span
style="color: #000000;"><span
style="color: #00ff00;">// treat all puntuation, digits and whitespace the same</span></span> <span
 style="color: #000000;"><span
style="color: #0000ff;">if</span>(nextWord.Length &amp;gt; 0){</span> <span
 style="color: #000000;">completeWord(nextWord);</span> <span
style="color: #000000;">nextWord = <span
style="color: #0000ff;">string</span>.Empty;</span> <span
style="color: #000000;">}</span> <span
style="color: #000000;">}</span> <span
style="color: #000000;">}</span> <span
style="color: #000000;">}</span> <span
style="color: #000000;"><span
style="color: #0000ff;">&nbsp;</span></span></span>       
</pre>

<pre>
<span style="color: #0000ff;"><span style="color: #000000;"><span
style="color: #0000ff;">catch</span>(<span
style="color: #00ffff;">EndOfStreamException</span> ex){</span> <span
 style="color: #000000;"><span
style="color: #00ff00;">// add last word - even if it is partial - discuss[EOS]ion point?</span></span> <span
 style="color: #000000;">completeWord(nextWord);</span> <span
style="color: #000000;"><span
style="color: #00ffff;">Console</span>.WriteLine(ex.Message);</span> <span
 style="color: #000000;">}</span> <span
style="color: #000000;"><span
style="color: #0000ff;">catch</span>(<span
style="color: #00ffff;">Exception</span> ex){</span> <span
style="color: #000000;"><span
style="color: #00ffff;">Console</span>.WriteLine(ex.Message);</span> <span
 style="color: #000000;">}</span> <span
style="color: #000000;"><span
style="color: #0000ff;">finally</span>{</span> <span
style="color: #000000;">BuilderReader.Dispose();</span> <span
style="color: #000000;">}</span> <span
style="color: #000000;">}</span></span> 
    <span
style="color: #0000ff;">private void</span> completeWord(string s){
        <span
style="color: #0000ff;">if</span>(s.Length &amp;gt; 0){
            <span style="color: #00ffff;">Word</span> w = <span
style="color: #0000ff;">new</span> Word(s);
            BuilderWordList.addNewWord(w);
         }
     }
</pre>

<p>&nbsp;</p>

<p>The local variable&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">nextWord&nbsp;</span>
is just a string, set to empty string. Since you have to add all
words, including the last one -&nbsp;even if it has only partially
arrived before transmission ceased, I added a short
method&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">completeWord</span>,
to be called whenever a non-letter is read or an<span
style="color: #00ffff;">&nbsp;<span style="color: #000000;"><span
style="font-family: 'Courier New', Courier, monospace;">EndOfStreamException&nbsp;</span>
is hit. This calls the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordList&nbsp;</span>
method&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">addNewWord&nbsp;</span>
if there is anything in the string.&nbsp;<br />
</span></span></p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;">public void</span> addNewWord(<span
style="color: #00ffff;">Word</span> w)
    {  
        <span style="color: #00ff00;">// check word exists</span>
        <span
style="color: #0000ff;">bool</span> foundMatch = false;
        <span style="color: #0000ff;">foreach</span> (<span
style="color: #00ffff;">Word</span> listWord <span
style="color: #0000ff;">in</span> MyList){
</pre>

<pre>
<span
style="color: #00ff00;">// if yes, then just increment count</span>
             <span
style="color: #0000ff;">if</span> (w.Content == listWord.Content){
                  foundMatch = <span
style="color: #0000ff;">true</span>;
                  listWord.incrementCount();
             }
        }
        <span style="color: #0000ff;">if</span> (!foundMatch){
             MyList.Add(w);
        }
    }
</pre>

<p>&nbsp;</p>

<p>Again, a simple method (as I prefer it!). It simply iterated
through the list of&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Word&nbsp;</span>
objects in the member variable&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">myList</span>.
If it finds a match it sets the boolean foundMatch to true and adds
one to the count (or I could have used&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Count++</span>).
If it doesn't, then a new word is added to the list.</p>

<p>&nbsp;</p>

<p>So now we have a list which contains a max of one entry for each
word but it is not in order. I needed to create a class derived
from IComparer and pass it to the sort function for the list of
words. An IComparer clas needs to implement the function Compare.
In this case we have to compare counts and then alphabetical order.
It can be done in one pass, which I think makes life a lot
easier!</p>

<p>&nbsp;</p>

<pre>
<span
style="color: #0000ff;">public class</span> WordComparer : <span
style="color: #00ffff;">IComparer</span>&amp;lt;<span
style="color: #00ffff;">word</span>&amp;gt;
    {
        <span
style="color: #0000ff;">public int</span> Compare(<span
style="color: #00ffff;">Word</span> x, <span
style="color: #00ffff;">Word</span> y)
        {
            <span
style="color: #0000ff;">if</span> (x.Count &amp;gt; y.Count){
                <span style="color: #0000ff;">return</span> -1;
            }
            <span
style="color: #0000ff;">else if</span> (x.Count &amp;lt; y.Count){
                <span style="color: #0000ff;">return</span> 1;
            }
            <span style="color: #0000ff;">else{</span>
</pre>

<pre>
<span
style="color: #00ff00;">// they're the same word count, so sort alphabetically</span>
                <span
style="color: #0000ff;">return string</span>.Compare(x.Content, y.Content);
            }
        }
    }
</pre>

<p>The only unexpected part of this was that I assigned 1 as the
result if&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">x.Count</span>&nbsp;was
the greater. This gave me a reverse sorted list! So I swapped the
values round. Notice for the alphabetical order I just
use&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">string.Compare</span>,
no further specification needed.</p>

<p>&nbsp;</p>

<p>Nearly there! The sort function in WordList is very short:</p>

<pre>
<span style="color: #0000ff;">private void</span> sortList()
        {
            <span
style="color: #00ffff;">WordComparer</span> wc = <span
style="color: #0000ff;">new</span> <span
style="color: #00ffff;">WordComparer</span>();
            <span style="color: #0000ff;">MyList.</span>Sort(wc);
        }
</pre>

<p>Passing an instance of IComparer enables the list to sort
itself.</p>

<p>&nbsp;</p>

<p>The last function simply iterates through the list and writes
each word to the console, together with its count.</p>

<p><img src="/media/3613/ConsoleSimpleList_250x126.jpg"  width="250"  height="126" alt="Console Simple List"/></p>

<p>What's this all good for? Well, you might be monitoring
someone's Tweets for rude words or buzzwords to display a&nbsp;<a
href="http://en.wikipedia.org/wiki/Tag_cloud">Tag_cloud</a>. The
next time we'll consider monitoring several streams (Tweeters?) at
once with possible delays in transmission.</p>

<p>&nbsp;</p>

<p>By the way, I even managed to put all my classes in a library
and make the small project refer to it. I'm quite proud.</p>

<p>&nbsp;</p>

<p>I don't have any idea how to place a zip file here. I doubt if
it would be that interesting at this stage but I ought to find
out.</p>

<p>&nbsp;</p>

<p><a
href="http://amandatime.blogspot.com/2009/09/timing-and-threads.html">
Next Episode</a></p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1122" parentID="1116" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="6" createDate="2012-02-09T11:51:07" updateDate="2012-02-10T17:53:55" nodeName="Timing and Threads" urlName="timing-and-threads" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116,1122" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-09-25T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[asp.net,c#,threads]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Timing and Threads</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[I said I'd get on to processing inputs from different sources. This is two problems really: one is, there might well be delays in transmission. In this case, it would be better to make regular reports (every 8 secs?) so you don't think your computer has died. You need a timer for this. The other is that your various sources have to be able to add words and counts to the same list without trading on each other and making a mess of the count. This suggests threading to me. Luckily, both timers and threads come from the same library in C#, as they've already forseen you might need both for some tasks. Whatever language you use, you will most likely need a special library for thread, because they go deeper than I want to into the workings of the machine in question. I am NOT a back-end developer (oooh missus!).]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p class="separator"><img src="/media/3603/Carrots.jpg" width="300" height="225" alt="Carrots"/></p>

<p>Yesterday was market day and I forgot to take my camera with me.
Sorry. But I will include an image from our market that, like Biddy
Baxter, I took earlier. This one is from Jackie's famous fruit and
veg stall. She's a real quick thinker, so no dithering!</p>

<p>&nbsp;</p>

<p><a
href="http://amandatime.blogspot.com/2009/09/chars-words-and-sorted-lists.html">
Previous Episode</a></p>

<p>&nbsp;</p>

<p>I said I'd get on to processing inputs from different sources.
This is two problems really: one is, there might well be delays in
transmission. In this case, it would be better to make regular
reports (every 8 secs?) so you don't think your computer has died.
You need a timer for this. The other is that your various sources
have to be able to add words and counts to the same list without
trading on each other and making a mess of the count. This suggests
threading to me. Luckily, both timers and threads come from the
same library in C#, as they've already forseen you might need both
for some tasks. Whatever language you use, you will most likely
need a special library for thread, because they go deeper than I
want to into the workings of the machine in question. I am NOT a
back-end developer (oooh missus!).</p>

<p>&nbsp;</p>

<p>Thing is, I had to learn this as I went along, as I haven't even
thought about simultaneous processes since Uni (and I'm too old to
use that abbreviation, besides it was a Poly then). I turned to the
one of my C# books I have only recently started reading
again:&nbsp; <a
href="http://www.amazon.co.uk/NET-Special-Experts-Voice-Net/dp/1590598237/ref=sr_1_14?ie=UTF8&amp;s=books&amp;qid=1253873262&amp;sr=1-14">
Pro C# with .NET 3.0</a>&nbsp;by Andrew Troelsen. I usually refer
to the more webby&nbsp; <a
href="http://www.amazon.co.uk/ASP-NET-2008-Experts-Voice-Net/dp/1590598938/ref=sr_1_2?ie=UTF8&amp;s=books&amp;qid=1253873384&amp;sr=1-2">
Pro ASP.NET 3.5 in C# 2008</a>&nbsp;by Matthew McDonald and Mario
Szpuszta. Both are Apress books.</p>

<p>&nbsp;</p>

<p>So, I now have a slightly different char reader
called&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">SlowedDownCharReader</span>.
This one uses a private random number to produce slight delays in
transmission, which is perhaps a bit more like real life:</p>

<p>&nbsp;</p>

<pre>
<span style="color: #00ffff;">Thread</span>.Sleep(<span
style="color: #0000ff;">this</span>._random.Next(200));
</pre>

<p>&nbsp;</p>

<p>happens at the beginning of the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">fetchNextChar&nbsp;</span>
method. The random number returned is multiplied by 200 to give
some hundredths of a second. This soon mounts up when you only get
one char at a time! Note that the word&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Thread&nbsp;</span>
is already coming up. Random delays and timers are all things that
affect the current thread of execution. Using these classes
requires a&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">using&nbsp;</span>
of&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">System.Threading</span>&nbsp;at
the head of all relevant files.</p>

<p>&nbsp;</p>

<p>Back in the main function, I've written a static&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">setupTimer</span>&nbsp;function.
This is where it gets tricky. Since the operation we want to happen
every 8 seconds is the WordList method&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">makeReport</span>,
we need to create a C#&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">delegate&nbsp;</span>
for the Timer to call. This has to be a void function passed
a&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">System.Object</span>&nbsp;parameter:</p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;">public delegate void</span> <span
style="color: #00ffff;">makeReportOp</span>(<span
style="color: #0000ff;">object</span> state);
</pre>

<p>&nbsp;</p>

<p><span style="font-size: small;">Here is the whole&nbsp;</span>
<span
style="font-family: 'Courier New', Courier, monospace;">setupTimer&nbsp;</span>
<span style="font-size: small;"><span
style="font-family: inherit;">function</span></span>:</p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;">static void</span> setupTimer(<span
style="color: #00ffff;">WordList</span> list, <span
style="color: #0000ff;">int</span> secsToStart,<span
style="color: #0000ff;">int</span> intervalSecs)
    {
        <span
style="color: #0000ff;">int</span> millisecsToStart = secsToStart * 1000;
        <span
style="color: #0000ff;">int</span> millisecsInterval = intervalSecs * 1000;
        <span style="color: #00ffff;">WordList</span>.<span
style="color: #00ffff;">makeReportOp</span> reporter = <span
style="color: #0000ff;">new</span> <span
style="color: #00ffff;">WordList</span>.<span
style="color: #00ffff;">makeReportOp</span>(list.makeReportCalledBack);
        <span
style="color: #00ffff;">TimerCallback</span> timeCB = new <span
style="color: #00ffff;">TimerCallback</span>(reporter);
        <span
style="color: #00ffff;">Timer</span> everySoOften = <span
style="color: #0000ff;">new</span> <span
style="color: #00ffff;">Timer</span>(timeCB, null, millisecsToStart, millisecsInterval);
    }
</pre>

<p>&nbsp;</p>

<p>First of all, the time before the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Timer&nbsp;</span>
is called and the interval time are passed as seconds and then
multiplied by 1000. No one thinks in milliseconds! Now
the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">delegate&nbsp;</span>
is created and passed the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordList&nbsp;</span>
method to call. I have created a new report method, which sorts the
list and writes it to console just as before but writes a short
message before and after, so you can see what is going on. The
method is locked, so that only one thread can access it (we are
envisaging only one wordlist at a time). This message contains the
thread number as well, because it is different from the main thread
of the program. A&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">TimerCallback&nbsp;</span>
delegate is created and passed the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">reporter&nbsp;</span>
delegate. Once that is done, all that is needed is to create
a&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Timer&nbsp;</span>
object and pass it the callback, so it knows what to do. It is
the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Timer&nbsp;</span>
which works in its own thread of execution.</p>

<p>&nbsp;<img src="/media/3753/startTimer.jpg" width="370" height="337" alt="Start Timer"/></p>

<p>This all leads to a strange effect. Every 8 seconds (the
interval I chose) a report is made to the console. These get
progressively longer as more words get added. At some point, the
fetchNextChar will generate its exception, print out a message to
the console and stop the main thread. Nothing stops the timer
except switching off the console window, so it will carry on
printing the same list. I'm told killing threads is a difficult
business. But this test case was imagining a continuous process of
reporting on different streams coming in, so we won't worry about
that.</p>

<p>&nbsp;</p>

<p>Next time we'll set up 3-4 threads all putting their words into
the same list.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><img src="/media/3688/Interim.jpg" width="312" height="327" alt="Interim"/></p>

<p>&nbsp;</p>

<p><img src="/media/3643/EndMain.jpg" width="312" height="327" alt="End Main"/></p>

<p>&nbsp;</p>

<p><a
href="http://amandatime.blogspot.com/2009_09_27_archive.html">Next
Episode</a></p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1123" parentID="1116" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="7" createDate="2012-02-09T11:51:07" updateDate="2012-02-10T17:50:27" nodeName="Many threads make light work" urlName="many-threads-make-light-work" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116,1123" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-09-29T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[Threads,asp.net,c#]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Many threads make light work</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Today is the final episode in my threading story. Next time, I'll talk about bread, and possibly Wicken Fen as well. The image on the left is of my coffee cup in front of its cafetière. The strange felt object is a coffee cosy, kindly made by my sister. Bet you don't have one of those!]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p><a
href="http://1.bp.blogspot.com/_xIRO6uPAK9I/SsDfooXoufI/AAAAAAAAAqk/ZCM9WBIDcbE/s1600-h/CoffeeCosy.JPG">
<br />
 <img src="/media/3608/CoffeeCosy.JPG" width="200" height="250" alt="Coffee Cosy"/><br />
</a></p>

<p>Today is the final episode in my threading story. Next time,
I'll talk about bread, and possibly Wicken Fen as well. The image
on the left is of my coffee cup in front of its cafetière. The
strange felt object is a coffee cosy, kindly made by my sister. Bet
you don't have one of those!</p>

<p>&nbsp;</p>

<p><a
href="http://amandatime.blogspot.com/2009_09_20_archive.html">Previous
episode</a></p>

<p>&nbsp;</p>

<p>As I hinted before, the separation of incoming stream from the
list of words created, nice though it is as far as Object
Orientation is concerned, makes even more sense if you are building
up words from several streams and adding them to the same wordlist.
Like trying to find out how many times the word "thriller" came up
just after Michael Jackson's death (I'm trying to think of a
one-word example!).</p>

<p>&nbsp;</p>

<p>So, this time we'll start with an array of readers. This one has
three. I amended the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">assignReaderContent&nbsp;</span>
function to give each one two different paragraphs from&nbsp;The
Star&nbsp;by Arthur C Clarke (the first 6, in fact). I then created
a single&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordList</span>&nbsp;and
a list of&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordListBuilder&nbsp;</span>
and a list of&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Threads</span>.
All&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Threads&nbsp;</span>
(there will be three) must share the same&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordList</span>.
The function&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">setupBuilderList</span>&nbsp;is
passed all three lists plus the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordList&nbsp;</span>
object, and associates them all together:</p>

<p>&nbsp;</p>

<pre>
<span
style="color: #0000ff;">static void</span> setupBuilderList(<span
style="color: #00ffff;">List</span>&amp;lt;<span
style="color: #00ffff;">WordListBuilder</span>&amp;gt;bList,<span
style="color: #00ffff;">ICharReader</span>[] rArray, <span
style="color: #00ffff;">List</span>&amp;lt;<span
style="color: #00ffff;">Thread</span>&amp;gt;threadList, <span
style="color: #00ffff;">WordList</span> wList)
    {
        <span style="color: #0000ff;">for</span> (<span
style="color: #0000ff;">int</span> i = 0; i &amp;lt; rArray.Length; i++)
        {
            bList.Add(<span
style="color: #0000ff;">new</span> WordListBuilder(rArray[i], wList));
            <span
style="color: #00ffff;">WordListBuilder</span>.<span
style="color: #00ffff;">buildWordListStarterOp</span> listStarter = bList[i].buildWordListStarter;
            threadList.Add(<span
style="color: #0000ff;">new</span> <span
style="color: #00ffff;">Thread</span>(<span
style="color: #0000ff;">new</span> <span
style="color: #00ffff;">ParameterizedThreadStart</span>(listStarter)));
        }
    }
</pre>

<p>There is a lot going on here, and quite a few new parts of
ASP.NET and the classes I have created to explain. Of course, at
this point there are no&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Threads&nbsp;</span>
or&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordListBuilders</span>,
so we have to make one builder to enclose each reader and associate
each with a thread. We create a new builder for each reader, as
before, passing the reader and the wordlist to the constructor.
Then we declare a&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">delegate</span>,
called&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">buildWordListStarterOp&nbsp;</span>
for the builder in question to communicate with the rest of the
operation.The starter op. in question is a member function
called&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">buildWordListStarter</span>,
which has to be passed an object (as does the delegate):</p>

<p>&nbsp;</p>

<pre>
<span
style="color: #0000ff;">public void</span> buildWordListStarter(<span
 style="color: #0000ff;">object</span> state)
        {
            <span style="color: #0000ff;">if</span> (state <span
style="color: #0000ff;">is</span> <span
style="color: #00ffff;">BuildWordListParams</span>)
            {
                <span
style="color: #00ffff;">BuildWordListParams</span> oP = (<span
style="color: #00ffff;">BuildWordListParams</span>)state;
                oP.myWordListBuilder.buildWordList();
            }
        }

        <span
style="color: #0000ff;">public delegate void</span> buildWordListStarterOp(<span
 style="color: #0000ff;">object</span> state);
</pre>

<p>&nbsp;</p>

<p>In the setup function, a&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">ParameterizedThreadStart&nbsp;</span>
object is required, so we can give the thread something to work
with. The parameter has to be of type&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">system.object</span>.
the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">BuildWordListStarter&nbsp;</span>
member function expects to be handed an object of the
class&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">BuildWordListParams</span>:</p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;">class</span> <span
style="color: #00ffff;">BuildWordListParams</span>
    {
        <span style="color: #0000ff;">public</span> <span
style="color: #00ffff;">WordListBuilder</span> myWordListBuilder;
        <span
style="color: #0000ff;">public</span> BuildWordListParams(<span
style="color: #00ffff;">WordListBuilder</span> a)
        {
            myWordListBuilder = a;
        }
    }
</pre>

<p>&nbsp;</p>

<p>Of course, since we are only passing a list, and a list is
already a&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">system.object</span>,
it is not necessary to go to the trouble of declaring&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">BuildWordListParams</span>.
On the other hand, it is now there, and if I wanted to pass
something else, for example and instruction to ignore common words
such as "the" and "it", I can just add them to this declaration and
it remains just one object.</p>

<p>&nbsp;</p>

<p>This class simply passes on an object of type&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordListBuilder</span>.
Assuming all goes well (and I confess, we don't have any exception
handling here) this means you can take the&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">BuildWordListParams&nbsp;</span>
object and just call its&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">buildWordList&nbsp;</span>
member function, the same one we have been using all along.</p>

<p>&nbsp;</p>

<p>In the static void function, this&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">buildWordListStarterOp&nbsp;</span>
is called&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">listStarter&nbsp;</span>
and is then passed to the new&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">Thread&nbsp;</span>
in its constructor. It is perhaps not necessary to delve into the
workings of threads in general. I take the view that the ASP.NET
team write Thread libraries so I don't have to.</p>

<p>&nbsp;</p>

<p>We have a list of builders and a list of thread. We now set up
the timer with just the same function as last time.</p>

<p>&nbsp;</p>

<p>The last static function (<span
style="font-family: 'Courier New', Courier, monospace;">startThreads</span>)
is to start each thread off, giving it the correct parameter as it
goes:</p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;">static void</span> startThreads(<span
style="color: #00ffff;">List</span>&amp;lt;thread&amp;gt;tList, <span
 style="color: #00ffff;">List</span>&amp;lt;wordlistbuilder&amp;gt;bList)
    {
        <span style="color: #0000ff;">int</span> i = 0;
        <span
style="color: #0000ff;">foreach</span> (Thread t <span
style="color: #0000ff;">in</span> tList)
        {
            <span
style="color: #00ffff;">BuildWordListParams</span> p = <span
style="color: #0000ff;">new</span> <span
style="color: #00ffff;">BuildWordListParams</span>(bList[i]);
            t.Start(p);
            i++;
        }
    }
</pre>

<p>&nbsp;</p>

<p>Each Thread is passed the corresponding&nbsp;<span
style="color: #00ffff;">WordListBuilder</span>.</p>

<p>&nbsp;</p>

<p>One more, rather important, point. If you have three threads
able to access a resource, such as a list of words at the same
time, you may well end up with rubbish results. The content of both
member functions of&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">WordList</span>,&nbsp;<span
 style="font-family: 'Courier New', Courier, monospace;">AddNewWord&nbsp;</span>
and&nbsp;<span
style="font-family: 'Courier New', Courier, monospace;">makeReportCalledBack&nbsp;</span>
are enclosed in a lock statement. This ensures only one thread (we
hope, containing a builder) will access it at any one time. It will
then be released for another thread to use.</p>

<p>&nbsp;</p>

<p>Here are some screenshots:</p>

<p><img src="/media/3748/StartMulti.jpg" width="378" height="156" alt="Start Multi"/></p>

<p>Here, you can see that the main thread is number 9, and that
numbers 10-12 have been assigned to the different builders.</p>

<p class="separator"><img src="/media/3693/InterimMulti.jpg" width="425" height="335" alt="Interim Multi"/></p>

<p class="separator">&nbsp;</p>

<p>Here, the main thread has finished, all builders have been
assigned their char readers and all threads have been started.</p>

<p class="separator">&nbsp;</p>

<p>&nbsp;</p>

<p>We are getting the first report from thread 6, which is the
Timer/WordList.</p>

<p>&nbsp;<img src="/media/3698/InterimMulti2.jpg" width="425" height="335" alt="Interim Multi2"/></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>At this point most or all of the content has been read. I
counted up instances of the word "that" in my 6 paragraphs and
there are, indeed 10.</p>

<p class="separator"><img src="/media/3648/EndMulti.jpg" width="431" height="151" alt="End Multi"/></p>

<p>Here, two of the threads have hit the EndOfStreamException&nbsp;
and have been closed.</p>

<p>What I do find odd is that all reports cease at this point. The
previous version kept making the same report over and over again. I
do not understand this, and suspect I have introduced a bug.</p>

<p>&nbsp;</p>

<p>AT some point I will try to get all of my files up here in a
zip, so you can have them, if you want.</p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1124" parentID="1116" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="8" createDate="2012-02-09T11:51:07" updateDate="2012-02-10T17:08:29" nodeName="How bread gets made in this house" urlName="how-bread-gets-made-in-this-house" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1116,1124" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-09-09T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Food]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[bread]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>How bread gets made in this house</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[This recipe produces bread that is half wholemeal and half white. It has a good texture, provided by the nuts and grains and most people love it. I do NOT use a breadmaker, I think they are silly. I have 6 loaf tins, each for a roughly 750g loaf, and that fills my oven. I freeze 5 and we start eating the other one. I make two amounts of her recipe. I must mention, it has one "bug", in that she asks for 2 cups of water. This will never work with such a lot of flour! use 3.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p>My bread recipe is an adaptation of Mollie Katzen's in The&nbsp;
<a
href="http://www.amazon.co.uk/Enchanted-Broccoli-Forest-Timeless-Delicacies/dp/1580081266/ref=sr_1_2?ie=UTF8&amp;s=books&amp;qid=1254245234&amp;sr=8-2">
Enchanted Broccoli Forest</a>&nbsp;(I know that is twee but her
later books have more grown-up titles). I have been making it
pretty much ever since we left Germany (12 years ago) because I
couldn't find any nice English bread. Things look better these days
but I still like my own.</p>

<p>&nbsp;</p>

<p>This recipe produces bread that is half wholemeal and half
white. It has a good texture, provided by the nuts and grains and
most people love it. I do NOT use a breadmaker, I think they are
silly. I have 6 loaf tins, each for a roughly 750g loaf, and that
fills my oven. I freeze 5 and we start eating the other one. I make
two amounts of her recipe. I must mention, it has one "bug", in
that she asks for 2 cups of water. This will never work with such a
lot of flour! use 3.</p>

<p>&nbsp;</p>

<p>cup = 250<span style="font-size: x-small;">ml</span></p>

<p>tablespoon = 5<span style="font-size: x-small;">ml</span></p>

<p>&nbsp;</p>

<p class="separator"><img src="/media/3593/bread.jpg" width="350" height="262" alt="Bread"/></p>

<p><span style="font-size: large;">Ingredients</span></p>

<ul>
<li>3 cups warm water</li>

<li>1 tablespoon dried yeast</li>

<li>pinch sugar or honey</li>

<li>4 ½ cups strong wholemeal flour</li>

<li>4 cups strong white flour</li>

<li>1 cup cooked grains (barley, quinoa or millet for example)</li>

<li>½ cup seeds (sunflower, linseed, pumpkin, sesame, poppy - poss.
not all at once)</li>

<li>1 tablespoon salt</li>

<li>¼ cup oil</li>

<li>1 dessertspoon honey or molasses</li>
</ul>

<p>&nbsp;</p>

<p><span style="font-size: large;">Method</span></p>

<ol>
<li>Cook ½ cup of grain (barley, millet or quinoa, for example) in
1 cups of water. You need to bring it to the boil and then cover up
and simmer for 10 minutes. Then leave to cool until just
hand-warm.</li>

<li>Get a large mixing bowl and add 3 cups hand-warm water.</li>

<li>Add the dried yeast and a pinch of sugar or honey.</li>

<li>After about 5 mins you will see the yeast start to move around.
At this point add 1½ cups of wholemeal flour and whisk it in. Leave
for ½ hour or so until it has a foamy top. This stage is called
the&nbsp;sponge&nbsp;and is important, as the yeast gets a chance
to grow without lifting a lot of heavy flour.</li>

<li>Now add a lot more stuff! Stick a dessertspoon in some honey or
molasses and add to the mix.</li>

<li>Now add the salt and the oil</li>

<li>Stir in the cooked grains and the seeds</li>

<li>Beat in three more cups of wholemeal flour</li>

<li>Stir in two cups of white flour. this will be much harder</li>

<li>Mix in the last two cups of white flour with your hands. After
a while, the dough starts to come together. Sometimes you have to
add more flour, sometimes it is hard to incorporate it all. Tip it
onto your work surface and knead it until you have a nice smooth
ball of dough</li>

<li>Put it back into the bowl and leave to rise for at least two
hours. More than four and it will reach its maximum size and
collapse but this has never caused me any problem</li>

<li>Oil three loaf tins</li>

<li>Take out the dough and knead it again on a floured surface.
Divide it up into three portions and press one down into each
tin</li>

<li>Leave to prove for about an hour (it really depends on the
weather, yeast likes it warm)</li>

<li>When the dough is starting to rise above the rim of the tin,
turn the oven on to 190°c (fan oven)</li>

<li>Put the bread in only when the oven has reached temperature
(this is baking, not stew!) and bake for 45 minutes</li>

<li>To test the bread, turn it out of the tin and tap the bottom.
It should sound hollow</li>

<li>You might want to give it at least 5 minutes so you don't burn
your mouth on the first gorgeous slice with butter!</li>
</ol>

<p><span style="font-size: large;">Variations</span></p>

<p>I always make two batches, as I said. A common combination is
barley for the grains plus pumpkin and sesame seeds. I use molasses
in this one. In the other bowl I would have quinoa or millet for
the grains plus poppy and sunflower seeds. I would use honey in
this mix.</p>

<p>&nbsp;</p>

<p>Mollie Katzen also suggests chopped dried fruit. As a family of
marmite addicts, this is not all that appealing, since we use this
as our everyday bread. I have alos at times replaced most of the
wholmeal flour with rye, or the white flour with spelt. Both of
these work fine. The grains and seeds are also optional, bear in
mind that leaving them out means you have less mass, so perhaps
marginally smaller loaves.</p>

<p>&nbsp;</p>

<p>I find the American habit of using cups to be well suited to
measuring flour. I have tried putting all 8½ cups of flour for one
batch on my scales and it just runs over. Far easier just to keep a
clean cup measure and dip it into the flour bag. You could use an
ordinary cup (not mug!) and work out roughly where 250ml would
reach to. For a ¼ cup you could try an egg cup. This is only used
for measuring oil, so it need not be accurate. Our egg cups have
holes in the bottom for water to drain away, so I don't measure
liquids with them!</p>

<p>&nbsp;</p>

<p>I think I'll take pictures of the sponge and dough stages next
time I bake, so you can see them.</p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
        </uBlogsyFolderMonth>
        <uBlogsyFolderMonth id="1125" parentID="1112" level="4" writerID="0" creatorID="0" nodeType="1060" template="1047" sortOrder="3" createDate="2012-02-09T11:51:07" updateDate="2012-02-09T12:07:25" nodeName="October" urlName="october" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1125" isDoc="">
          <uBlogsyContentTitle />
          <uBlogsySeoKeywords />
          <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
          <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
          <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
          <umbracoNaviHide />
          <umbracoRedirect />
          <umbracoInternalRedirectId />
          <umbracoUrlName />
          <umbracoUrlAlias />
          <uBlogsyPost id="1126" parentID="1125" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="1" createDate="2012-02-09T11:51:08" updateDate="2012-02-10T17:48:50" nodeName="Models, Views and Controllers" urlName="models,-views-and-controllers" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1125,1126" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-10-14T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical,Food]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[MVC,asp.net,c#,web development]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Models, Views and Controllers</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Another nerdy post, I'm sorry. To make up for that, and because I was glued to every one of Jamie Oliver's adventures in the US, I have a gluttonous photo for you. I bought a bag of pigskin from the Farmers' Market on Saturday and made my very own Porky Scratchings from it. I used the recipe from Jamie's America, which involves stirring cayenne, cinnamon, seasalt, honey and garlic into the cooked scratchings and putting them back in the oven for 8 minutes. This was gorgeous but a little too much like Nigella Lawson's Union Square Café bar nuts from Nigella Bites (same topping but with brown sugar and rosemary). Next time I'll try just fennel, garlic and seasalt.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p class="separator"><img src="/media/3713/PorkScratchings.JPG" width="300" height="228" alt="Pork Scratchings"/></p>

<p>Another nerdy post, I'm sorry. To make up for that, and because
I was glued to every one of Jamie Oliver's adventures in the US, I
have a gluttonous photo for you. I bought a bag of pigskin from the
Farmers' Market on Saturday and made my very own Porky Scratchings
from it. I used the recipe from&nbsp; <a
href="http://www.amazon.co.uk/Jamies-America-Jamie-Oliver/dp/0718154762/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1255508897&amp;sr=8-1">
Jamie's America</a>, which involves stirring cayenne, cinnamon,
seasalt, honey and garlic into the cooked scratchings and putting
them back in the oven for 8 minutes. This was gorgeous but a little
too much like Nigella Lawson's Union Square Café bar nuts
from&nbsp; <a
href="http://www.amazon.co.uk/Nigella-Bites-Lawson/dp/0701172878/ref=sr_1_6?ie=UTF8&amp;s=books&amp;qid=1255508994&amp;sr=1-6">
Nigella Bites</a>&nbsp;(same topping but with brown sugar and
rosemary). Next time I'll try just fennel, garlic and seasalt.</p>

<p>&nbsp;</p>

<p>Well, for some time now, I've had the first chapter of a book on
ASP.NET MVC on my desktop. It's about a site called&nbsp;<a
href="http://nerddinnerbook.s3.amazonaws.com/Intro.htm">NerdDinner</a>.
For some reason, I decided to actually take a look at it and
started to work through the example. And I instantly fell in love!
I've known I want to program in C# for several years now, and that
I feel comfortable in Visual Studio. I am also aware that there are
things called "Content Management Systems", lots of them, and only
one of those written in .Net. What I wanted from a CMS would be a
way of managing content (of course), so the customer can change
what is on the page, keeping it up to date. I would therefore need
a membership system. I am aware that it is important to keep data
storage well away from the page itself, so that database tables and
the classes that represent them can be looked after. The problem is
that what we can now call the "traditional" ASP.NET structure, with
code behind pages and databound gridviews is that it is easy to get
into an almighty mess, which at some point needs to be sorted out.
Then it looks like way too big a task.</p>

<p>&nbsp;</p>

<p>I looked at various "Content Management Systems". Why are they
called that anyway? Why not "Website Management Systems" or
something else. Wordpress is supposed to be easy but I didn't get
on with it, as it is pretty rigid. Fair enough, it was designed for
blogging anyway. I investigated Drupal. Huge learning curve and
writtten (like many CMSs) in PHP. No thanks. I looked at
DotNetNuke. Two problems: it dumps a big load of mysterious files
and language in your website, and seems to require a whole database
all to itself. Third problem, I could in no way get this to work on
my Vista PC with SQL Server, with or without IIS. Forget it. This
was disappointing, as I really would prefer to stick with Visual
Studio.</p>

<p>&nbsp;</p>

<p>I tried Django late last spring, using various books and the
help on the Django site. Python is a language that certainly
appeals, it is clean, nerdy in a good way and does not carry all
the bloat (written in various styles) that PHP does. To my
frustration, I could not get beyond the most trivial examples.
Neither could I work out where to keep my CSS, images and
Javascript files. The writers of all these books seemed to regard
the matter as unimportant. Examples were written with inline CSS
(yuk!).</p>

<p>&nbsp;</p>

<p>So, ASP.NET MVC. It doesn't call itself a "Content Management
System", any more than .Net itself does. It's a Framework. That
sounds much more open. As long as you have C# 3.0 (check) and some
kind of MS SQL database (apparently Web Developer Express 2008 will
do) you're in.</p>

<p>&nbsp;</p>

<p>What appeals to me is that so many other modern buzzwords and
ideas seem to be a part of this. They have copied ideas from Ruby
on Rails (I had tried that as well and found it difficult, now I
would be back in my comfort zone). It was based on the
old-fashioned but newly discovered pattern "Model, View,
Controller". This separates the pretty web pages from the content
in the database and is all run with a set of "controllers". There
is a huge emphasis on testability, even designing with behaviour
and testability in&nbsp; mind from the start. You are encouraged to
import and use open-source test tools such as NUnit and Moq (I'm
learning). The great JQuery library is part of the framework.</p>

<p>&nbsp;</p>

<p>As for the parts I already know well, CSS can go anywhere the
views can find it (typically in a "content" folder. Web pages are
built up using a master page and come out with nice clean html. Any
javascript or id attributes are what I put there myself and not
generated out of monolithic .Net widgets.</p>

<p>&nbsp;</p>

<p>Unless I want them of course. MVC is not the dark side of the
.Net. You can (fairly) easily add in bits of web form-type ASP.Net
when you want to.</p>

<p>&nbsp;</p>

<p>I'm so happy, I'm getting&nbsp; incoherent. Once I've worked
through the superb Steven Sanderson book&nbsp; <a
href="http://www.amazon.co.uk/Pro-ASP-NET-Framework-Steven-Sanderson/dp/1430210079/ref=sr_1_1?ie=UTF8&amp;s=books&amp;qid=1255509412&amp;sr=1-1">
Pro ASP.NET Framework</a>, I'm going right back to my portfolio and
rewriting everything in MVC. It's light, it's programmer-like and I
love it.</p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
        </uBlogsyFolderMonth>
        <uBlogsyFolderMonth id="1127" parentID="1112" level="4" writerID="0" creatorID="0" nodeType="1060" template="1047" sortOrder="4" createDate="2012-02-09T11:51:08" updateDate="2012-02-09T12:07:25" nodeName="November" urlName="november" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1127" isDoc="">
          <uBlogsyContentTitle />
          <uBlogsySeoKeywords />
          <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
          <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
          <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
          <umbracoNaviHide />
          <umbracoRedirect />
          <umbracoInternalRedirectId />
          <umbracoUrlName />
          <umbracoUrlAlias />
          <uBlogsyPost id="1128" parentID="1127" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="1" createDate="2012-02-09T11:51:08" updateDate="2012-02-10T17:47:52" nodeName="Regexes from the perspective of a noob" urlName="regexes-from-the-perspective-of-a-noob" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1127,1128" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-11-03T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Techical]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[c#,regex,regular expression]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Regexes from the perspective of a noob</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[There comes a time, for any programmer, when they have to get their hands dirty with regular expressions. Yuk. They look like maths but are not really, as the rules are fairly random. This cannot be helped, as the system grew organically and is used by too many languages and too much legacy code to change.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p class="separator"><img src="/media/3728/RedLeaves.JPG" width="300" height="225" alt="Red Leaves"/></p>

<p>&nbsp;</p>

<p>Pictures this time are from a visit last week to Anglesey Abbey.
I've no idea what the round-leaved shrub is called but it is
lovely, isn't it?</p>

<p>The purple berries likewise. I did buy one of these a couple of
years ago but it failed so comprehensively that I can't even
remember where I planted it. The last photo is a Japanese Maple.
But you knew that.</p>

<p>&nbsp;</p>

<p>There comes a time, for any programmer, when they have to get
their hands dirty with regular expressions. Yuk. They look like
maths but are not really, as the rules are fairly random. This
cannot be helped, as the system grew organically and is used by too
many languages and too much legacy code to change.</p>

<p>&nbsp;</p>

<p>One thing I dislike very much and will change in my own code is
seeing a regex like this:</p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;">string</span> matchString = <span
style="color: #ff0000;">@"^(?</span><span
style="color: #ff0000;">\\d{4}-\\d{2}-\\d{2})\\s*(?</span><span
style="color: #ff0000;">\\d{2}:\\d{2}:\\d{2}:\\d{3}) (.*Exit\\scode\\s=\\s)(?</span><span
 style="color: #ff0000;">\\dx\\d{6})"</span>
</pre>

<p>&nbsp;</p>

<p><img src="/media/3708/MauveBerries.JPG" width="200" height="171" alt="Mauve Berries"/></p>

<p>&nbsp;</p>

<p>What on earth does that mean? (Actually I had to break this line
up so it is readable. In my code editor it is all on one line but
of course that wraps and "pre" tags don't.) You look in tutorial
books and on MSDN and other places and all the examples seem to be
like this. Do you know, you are allowed to approach this like a
normal programmer, not a machine, and break it all up into smaller
chunks, each of which has a sensible name and a comment?</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;">string</span> dateMatch = <span
style="color: #ff0000;">@"(?</span><span
style="color: #ff0000;">\d{4}-\d{2}-\d{2})"</span>; <span
style="color: #38761d;">// 0000-00-00 pattern</span>
<span style="color: #0000ff;">string</span> timeMatch = <span
style="color: #ff0000;">@"(?</span><span
style="color: #ff0000;">\d{2}:\d{2}:\d{2}:\d{3})"</span>; <span
style="color: #38761d;">// 00:00:00:000 pattern</span>
<span style="color: #38761d;">// Exit code = 0x240001</span>
<span style="color: #0000ff;">string</span> findExit = <span
style="color: #ff0000;">@"(.*Exit\scode\s=\s)"</span>; <span
style="color: #38761d;">// Any number of characters followed by "Exit code = "</span>
<span style="color: #0000ff;">string</span> exitCodeMatch = <span
style="color: #ff0000;">@"(?</span><span
style="color: #ff0000;">\dx\d{6})"</span>; <span
style="color: #38761d;">// 0x000000 pattern</span>
</pre>

<p>&nbsp;</p>

<p>Then add them all together:</p>

<p>&nbsp;</p>

<pre>
<span style="color: #0000ff;">string</span> matchString = <span
style="color: #ff0000;">@"^"</span> + dateMatch + <span
style="color: #ff0000;">@"\s*"</span> + timeMatch + findExit + exitCodeMatch;
</pre>

<p>&nbsp;</p>

<p><img src="/media/3703/JapaneseMaple.JPG" width="350" height="262" alt="Japanese Maple"/>Isn't that so much nicer?
I for one certainly feel that regexes are slightly less likely to
come back and haunt me later if I compose them in this way.But as I
said in the title, I am still a noob in this area.</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>By the way, the @ signs are peculiar to .Net and mean yes, I do
want&nbsp; those backslashes. The code won't compile without
them.</p>

<p>&nbsp;</p>

<p>The more eagle-eyed of you may notice that this example comes
from an exercise in the MCTS Microsoft .Net Framework - Application
Development Foundation book. Don't worry, I composed the regexes
myself and there may well have been a better way of doing it.</p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
          <uBlogsyPost id="1129" parentID="1127" level="5" writerID="0" creatorID="0" nodeType="1064" template="1050" sortOrder="2" createDate="2012-02-09T11:51:08" updateDate="2012-02-09T19:35:34" nodeName="Black eyed bean and squash stew" urlName="black-eyed-bean-and-squash-stew" writerName="admin" creatorName="admin" path="-1,1067,1068,1112,1127,1129" isDoc="">
            <uBlogsyPostAuthor>Amanda</uBlogsyPostAuthor>
            <uBlogsyPostDate>2009-11-09T00:00:00</uBlogsyPostDate>
            <uBlogsyPostCategories><![CDATA[Food]]></uBlogsyPostCategories>
            <uBlogsyPostTags><![CDATA[squash]]></uBlogsyPostTags>
            <uBlogsyPostDisableComments>0</uBlogsyPostDisableComments>
            <uBlogsyContentTitle>Black eyed bean and squash stew</uBlogsyContentTitle>
            <uBlogsySeoKeywords />
            <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
            <uBlogsyContentSummary><![CDATA[Oh dear, I really should have taken a photo of this, cos it was lovely. Anyway, this depends heavily on what I found at the Farmer's Market this week and two weeks ago. The insistence on small squashes is because that is what we have available this year. I'm told the weather was just too cold during April and May and they never really got going.]]></uBlogsyContentSummary>
            <uBlogsyContentBody><![CDATA[
<p>Oh dear, I really should have taken a photo of this, cos it was
lovely. Anyway, this depends heavily on what I found at the
Farmer's Market this week and two weeks ago. The insistence on
small squashes is because that is what we have available this year.
I'm told the weather was just too cold during April and May and
they never really got going.</p>

<p>Note, the main ingredients are all in pretty vague amounts. That
is fine, we are not baking, so little precision is
needed.&nbsp;</p>

<p>&nbsp;</p>

<h2>Ingredients</h2>

<p>&nbsp;</p>

<ol>
<li>250g black-eyed beans, soaked overnight</li>

<li>2 small Kabocha squashes</li>

<li>About 20 shallot-type onions</li>

<li>Two or three cherry-bomb chillis</li>

<li>Large handlful of rainbow chard</li>

<li>Lots of garlic</li>

<li>2 bay leaves</li>

<li>Twig of rosemary, twig or two of thyme</li>

<li>2 pints of vegetable stock</li>

<li>Dessertspoon of molasses/treacle</li>
</ol>

<h2>Method</h2>

<p>&nbsp;</p>

<ul>
<li>Get someone who is not terrified of pressure cookers to deal
with the beans. Otherwise, I would treat them like kidney beans,
hard boil for 10 minutes to make sure they are no longer poisonous,
then simmer for an hour or so until soft and floury inside. Are
black-eyed beans poisonous? Of course you can use tinned, and I
often do. Advantages of dried are: you don't have to carry the
water and the weight of the tins, plus the beans will soak up more
flavour from the sauce if they are not aready cooked to death and
swimming in tin-juice.</li>

<li>Get a large pan and start frying the whole, peeled shallots in
oil. Do this very gently, for 20 mins to half an hour.</li>

<li>Meanwhile, cut the squashes into halves (they really were
small!) and take out their seeds. Place cut-side down on an oven
tray at around 190°C, also for half an hour or until soft.</li>

<li>When the onions are halfway there, add the herbs and four or
five chopped up cloves of garlic. You don't want to burn the
garlic, it tastes horrible.</li>

<li>When the onions are golden, pour in the stock. There really is
no shame in using powdered stock, such as Marigold, especially if
you are adding lots of other flavours.</li>

<li>Add in the molasses (this means, stick a dessertspoon in the
tin, take it out full and leave the spoon in the pot of stew until
the molasses has slid off it).<br />
 Make a hole in the chillis with the point of a knife and add them
whole. This worked very well with fresh juicy chillis and we got as
much heat as seems reasonable with an autumn squash stew. By all
means slice them up and add with the garlic if you prefer.</li>

<li>While this is all simmering, get the cooked squash out of the
oven and turn the oven to 140°C.</li>

<li>It should be fairly easy to spoon the flesh from the skin and
just drop spoonfulls and lumps into the stewpot. The cut flesh will
be slilghtly carmelised, the skin will be a bit blackened and you
don't need it.</li>

<li style="list-style: none;">Put the stewpot (mine is cast iron)
in the oven for about 40 mins.</li>

<li>Just before serving, slice the chard across and fry gently in
butter with garlic until wilted.</li>

<li>Serve the bowls of lovely orange stew with a topping of bright
green chard and garlic. It is pretty filling!</li>
</ul>

<p>&nbsp;</p>

<p>In case you are wondering why I haven't blogged on anything
techy in I don't know how long, the answer is MCTS. I am studying
for Microsoft Certification as a Technical Specialist (Foundation).
This is difficult and also pretty dry. I am producing no work of
any creative value and you really don't want to know, trust me.</p>
]]></uBlogsyContentBody>
            <umbracoNaviHide>0</umbracoNaviHide>
            <umbracoRedirect />
            <umbracoInternalRedirectId />
            <umbracoUrlName />
            <umbracoUrlAlias />
          </uBlogsyPost>
        </uBlogsyFolderMonth>
        <uBlogsyContentTitle />
        <uBlogsySeoKeywords />
        <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
        <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
        <uBlogsyContentBody><![CDATA[]]></uBlogsyContentBody>
        <umbracoNaviHide />
        <umbracoRedirect />
        <umbracoInternalRedirectId />
        <umbracoUrlName />
        <umbracoUrlAlias />
      </uBlogsyFolderYear>
    </uBlogsyContainerBlog>
    <uBlogsyContainerPage id="1104" parentID="1067" level="2" writerID="0" creatorID="0" nodeType="1058" template="1047" sortOrder="2" createDate="2011-06-02T10:37:01" updateDate="2012-02-09T11:15:41" nodeName="Pages" urlName="pages" writerName="admin" creatorName="admin" path="-1,1067,1104" isDoc="">
      <uBlogsyContentTitle>Pages</uBlogsyContentTitle>
      <uBlogsySeoKeywords />
      <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
      <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
      <uBlogsyContentBody><![CDATA[
<p>This body and title is here in case you want to use this as a
landing page.</p>
]]></uBlogsyContentBody>
      <umbracoNaviHide>0</umbracoNaviHide>
      <umbracoRedirect />
      <umbracoInternalRedirectId />
      <umbracoUrlName />
      <umbracoUrlAlias />
      <uBlogsyPage id="1105" parentID="1104" level="3" writerID="0" creatorID="0" nodeType="1063" template="1049" sortOrder="1" createDate="2011-05-28T02:38:25" updateDate="2012-02-10T18:11:09" nodeName="About" urlName="about" writerName="admin" creatorName="admin" path="-1,1067,1104,1105" isDoc="">
        <uBlogsyContentTitle>About Amanda</uBlogsyContentTitle>
        <uBlogsySeoKeywords />
        <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
        <uBlogsyContentSummary><![CDATA[I'm a keen web developer and somewhat average martial artist living in the Fens. I'm going to write about various things, some web-related, others images of plants and food.]]></uBlogsyContentSummary>
        <uBlogsyContentBody><![CDATA[
<p><img src="/media/4368/amanda09.jpg" width="203" height="266" alt="Amanda 09"/></p>

<p>I'm a keen web developer and somewhat average martial artist
living in the Fens. I'm going to write about various things, some
web-related, others images of plants and food.</p>
]]></uBlogsyContentBody>
        <umbracoNaviHide>0</umbracoNaviHide>
        <umbracoRedirect />
        <umbracoInternalRedirectId />
        <umbracoUrlName />
        <umbracoUrlAlias />
      </uBlogsyPage>
      <uBlogsyPage id="1106" parentID="1104" level="3" writerID="0" creatorID="0" nodeType="1063" template="1049" sortOrder="2" createDate="2011-05-28T17:48:11" updateDate="2012-02-10T18:11:53" nodeName="Contact" urlName="contact" writerName="admin" creatorName="admin" path="-1,1067,1104,1106" isDoc="">
        <uBlogsyContentTitle>Contact</uBlogsyContentTitle>
        <uBlogsySeoKeywords />
        <uBlogsySeoDescription><![CDATA[]]></uBlogsySeoDescription>
        <uBlogsyContentSummary><![CDATA[]]></uBlogsyContentSummary>
        <uBlogsyContentBody><![CDATA[
<p>&nbsp;</p>

<?UMBRACO_MACRO macroAlias="uBlogsyContactForm" />]]></uBlogsyContentBody>
        <umbracoNaviHide>0</umbracoNaviHide>
        <umbracoRedirect />
        <umbracoInternalRedirectId />
        <umbracoUrlName />
        <umbracoUrlAlias />
      </uBlogsyPage>
    </uBlogsyContainerPage>
    <uBlogsyRSS id="1107" parentID="1067" level="2" writerID="0" creatorID="0" nodeType="1065" template="1051" sortOrder="3" createDate="2011-05-26T15:33:46" updateDate="2012-02-09T11:15:41" nodeName="rss" urlName="rss" writerName="admin" creatorName="admin" path="-1,1067,1107" isDoc="">
      <umbracoNaviHide />
      <umbracoRedirect />
      <umbracoInternalRedirectId />
      <umbracoUrlName />
      <umbracoUrlAlias />
    </uBlogsyRSS>
    <uBlogsySpamAutoApproveComments>1</uBlogsySpamAutoApproveComments>
    <uBlogsyRssTitle>AmandaTime</uBlogsyRssTitle>
    <uBlogsyContactEmail>amanda@footsword.com</uBlogsyContactEmail>
    <uBlogsyBlogLinks><![CDATA[http://ethnopsychology-blog.blogspot.com/
http://smyword.com/
http://lkjaywriter.blogspot.com/]]></uBlogsyBlogLinks>
    <uBlogsyContentFooter>Created by &lt;a href="http://www.footsword.com"&gt;Footsword Technologies&lt;/a&gt;</uBlogsyContentFooter>
    <uBlogsyContactReplyToEmail>no-reply@footsword.com</uBlogsyContactReplyToEmail>
    <uBlogsyContactCommentNotification>1</uBlogsyContactCommentNotification>
    <uBlogsyGeneralDefaultAuthor>Amanda</uBlogsyGeneralDefaultAuthor>
    <uBlogsySpamAutoDeleteSpam>0</uBlogsySpamAutoDeleteSpam>
    <uBlogsyRssDescription><![CDATA[Amanda's Blog]]></uBlogsyRssDescription>
    <uBlogsyGeneralUseSummary>1</uBlogsyGeneralUseSummary>
    <uBlogsySpamAkismetAPIKey />
    <uBlogsyRssCopyright>Footsword Technologies</uBlogsyRssCopyright>
    <uBlogsyGeneralShowSocialMedia>1</uBlogsyGeneralShowSocialMedia>
    <uBlogsySpamDisableComments>0</uBlogsySpamDisableComments>
    <uBlogsyGeneralUseTitleAsNodeName>1</uBlogsyGeneralUseTitleAsNodeName>
    <uBlogsyContentTitle>AmandaTime</uBlogsyContentTitle>
    <uBlogsySeoKeywords>Amanda Earlam</uBlogsySeoKeywords>
    <uBlogsySeoDescription><![CDATA[AmandaTime]]></uBlogsySeoDescription>
    <uBlogsyContentSummary><![CDATA[Amanda's mostly technical doings and musings]]></uBlogsyContentSummary>
    <uBlogsyContentBody><![CDATA[
<p>Need to put in some sort of description here.</p>
]]></uBlogsyContentBody>
    <umbracoNaviHide>0</umbracoNaviHide>
    <umbracoRedirect />
    <umbracoInternalRedirectId />
    <umbracoUrlName />
    <umbracoUrlAlias />
  </uBlogsyLanding>
</root>